// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require("Verifier")

let a = [
  "0x29d88baf2213f4fe3a4de56f7535493a642c89a37924d1769bc27a700da6c5c7",
  "0x0513f54f9ecb3ba65712b525b8becac23d2d400da0610b28943b7f622fa38ed7",
]
let b = [
  [
    "0x01b538db2f9e10b1325de08f1b6c01e9eb5b75c0f1a10caf8510c5f50576b415",
    "0x09f565b29e9bb4e2b079fbff19e2bb17050fe2d04206d64067f30274f113c107",
  ],
  [
    "0x1cb14041e010153dd2b6366450b136627f0c4a4de8de53db73a3a88bcb311617",
    "0x11481f34a2e2b47bbe910fcae877dacf0380faad5f035f09bceae3f1200c899d",
  ],
]
let c = [
  "0x300f5f0f0535288259341879126bd48db4cbe569b7ca739b422865e90cdc7a34",
  "0x074467f61cbe85506a9ecfd2e44e69c2b1d33dc23457207d419dcc9bd1f2e3e6",
]
let inputs = [
  "0x0000000000000000000000000000000000000000000000000000000000000009",
  "0x0000000000000000000000000000000000000000000000000000000000000001",
]

contract("TestSquareVerifier", async (accounts) => {
  before(async function () {
    this.verifier = await SquareVerifier.new({ from: accounts[0] })
  })

  // - use the contents from proof.json generated from zokrates steps
  describe("Test verification", function () {
    // Test verification with correct proof
    it("verification with correct proof", async function () {
      let verification = await this.verifier.verifyTx.call(a, b, c, inputs, {
        from: accounts[0],
      })
      console.log(verification)
      assert.equal(
        true,
        verification,
        "Verification with correct proof: It should be correct."
      )
    })

    // Test verification with incorrect proof
    it("verification with incorrect proof", async function () {
      let inputs1 = [
        "0x0000000000000000000000000000000000000000000000000000000000000004",
        "0x0000000000000000000000000000000000000000000000000000000000000001",
      ]

      let verification = await this.verifier.verifyTx.call(a, b, c, inputs1, {
        from: accounts[0],
      })
      console.log(verification)
      assert.equal(
        false,
        verification,
        "Verification with incorrect proof: It should be incorrect."
      )
    })
  })
})
